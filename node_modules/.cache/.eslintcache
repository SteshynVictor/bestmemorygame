[{"/Users/victorsteshyn/Documents/game/src/index.js":"1","/Users/victorsteshyn/Documents/game/src/App.js":"2","/Users/victorsteshyn/Documents/game/src/Game.jsx":"3","/Users/victorsteshyn/Documents/game/src/GameCard.jsx":"4"},{"size":254,"mtime":1658392006055,"results":"5","hashOfConfig":"6"},{"size":100,"mtime":1658391989818,"results":"7","hashOfConfig":"6"},{"size":2884,"mtime":1658391681999,"results":"8","hashOfConfig":"6"},{"size":472,"mtime":1658391721687,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l1beef",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/victorsteshyn/Documents/game/src/index.js",[],[],"/Users/victorsteshyn/Documents/game/src/App.js",[],[],"/Users/victorsteshyn/Documents/game/src/Game.jsx",["23","24","25","26","27"],[],"import './Game.scss';\n\nimport { useEffect, useState } from 'react';\nimport { GameCard } from \"./GameCard\";\n\nvar temp=[];\n\nconst Game = () =>{\n\n    // card array\n    const [card,setCard]=useState(null);\n    const [start,setStart]=useState(false);\n    const [click,setClick]=useState(0);\n\n    // check prime fn\n    const isPrime = num =>{\n        for ( var i = 2; i < num; i++ ) {\n            if ( num % i === 0 ) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // rand fn\n    const randSort = (arr) => {\n        return arr.sort(() => Math.round(Math.random() * 100) - 50);\n    }\n\n    // generate fn\n    const generateCard = (from,to) =>{\n        var arr = [];\n        for ( var i = from; i < to; i+=2 ) {\n            if ( isPrime(i) ) {\n                arr.push({\n                    show:true,\n                    active:false,\n                    number:i,\n                    error:false\n                });\n            }\n        }\n        arr=arr.concat(arr);\n        setCard(randSort(arr));\n    }\n\n    // start hidding\n    const hideCard = () =>{\n        setCard(card.map(item=>item.active?item:{...item,show:false}));\n    }\n    \n    // finish fn\n    const checkFinish = () =>{\n        if(!card.filter(item=>item.active==false).length){\n            alert('Greet! Well done');\n        }\n    }\n\n    // clear selected card\n    const clearSelected = () => {\n        temp=[];\n        card.map(item=>item.active?'':item.show=false);\n        card.map(item=>item.error=false);\n        setCard([...card]);\n    }\n\n    // click event\n    const checkCard = item =>{\n        setClick(click+1);\n\n        // clear old\n        if(temp.length==2){\n            clearSelected();\n        }\n        // insert new item\n        temp.push(item);\n        temp.map(item=>item.show=true);\n\n        // two card selected\n        if(temp.length==2){\n            if(temp[0].number===temp[1].number){\n                temp.map(item=>item.active=true);\n            }else{\n                temp.map(item=>item.error=true);\n            }\n        }\n        setCard([...card]);\n        checkFinish();\n    }\n\n    // on start\n    useEffect(()=>{\n        setStart(true);\n        generateCard(1,50);\n    },[]);\n\n    // on card generated\n    useEffect(()=>{\n        setTimeout(()=>hideCard(),3000);\n    },[start]);\n\n    return (\n        <div className={`game ${start?'active':''}`} onClick={()=>clearSelected()}>\n            <div className='game-content'>\n                <div className=\"game-title\">Best memory game</div>\n                <div className='game-grid'>\n                    {card?card.map((item,i)=>\n                        <GameCard key={i} item={item} show={()=>checkCard(item)}></GameCard>\n                    ):<></>}\n                </div>\n                <div className='game-score'>Game score: {click}</div>\n            </div>\n        </div>\n    )\n}\n\nexport {Game}","/Users/victorsteshyn/Documents/game/src/GameCard.jsx",[],[],{"ruleId":"28","severity":1,"message":"29","line":54,"column":42,"nodeType":"30","messageId":"31","endLine":54,"endColumn":44},{"ruleId":"28","severity":1,"message":"29","line":72,"column":23,"nodeType":"30","messageId":"31","endLine":72,"endColumn":25},{"ruleId":"28","severity":1,"message":"29","line":80,"column":23,"nodeType":"30","messageId":"31","endLine":80,"endColumn":25},{"ruleId":"32","severity":1,"message":"33","line":95,"column":7,"nodeType":"34","endLine":95,"endColumn":9,"suggestions":"35"},{"ruleId":"32","severity":1,"message":"36","line":100,"column":7,"nodeType":"34","endLine":100,"endColumn":14,"suggestions":"37"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generateCard'. Either include it or remove the dependency array.","ArrayExpression",["38"],"React Hook useEffect has a missing dependency: 'hideCard'. Either include it or remove the dependency array.",["39"],{"desc":"40","fix":"41"},{"desc":"42","fix":"43"},"Update the dependencies array to be: [generateCard]",{"range":"44","text":"45"},"Update the dependencies array to be: [hideCard, start]",{"range":"46","text":"47"},[2207,2209],"[generateCard]",[2305,2312],"[hideCard, start]"]